
import java.util.Scanner;
import java.util.regex.*;

class validateip4address {

	public static boolean isValidIPAddress(String ip) {

		String zeroTo255 = "(\\d{1,2}|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-5])";
		String oneto254 = "(\\d{1,2}[1-9]|(0|1)\\" + "d{2}|2[0-4]\\d|25[0-4])";

		String regex = oneto254 + "\\." + zeroTo255 + "\\." + zeroTo255 + "\\." + oneto254;

		Pattern p = Pattern.compile(regex);

		if (ip == null) {
			return false;
		}

		Matcher m = p.matcher(ip);

		return m.matches();
	}

	public static void main(String args[]) {

		Scanner sc = new Scanner(System.in);
		String input = sc.next();

		System.out.println("Output: " + isValidIPAddress(input));

	}
}

//Testing different cases



import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class validateiptestcases {
	@Test  
    public void testFindMax(){  
		
        
        assertEquals(false,validateip4address.isValidIPAddress("0.1.1.0"));  
        
    }  
	@Test  
    public void testFindMa(){  

        assertEquals(false,validateip4address.isValidIPAddress("1.1.1.0"));  
          
    }  
	@Test  
    public void testFindM(){  

        assertEquals(false,validateip4address.isValidIPAddress("0.1.1.1"));  
          
    }  
	@Test  
    public void testFind(){  

        assertEquals(false,validateip4address.isValidIPAddress("1.1.1.0"));  
          
    }  
	@Test  
    public void testFin(){  
		
        
        assertEquals(false,validateip4address.isValidIPAddress("255.1.1.0"));  
        
    }  
	@Test  
    public void testFi(){  
		
        
        assertEquals(false,validateip4address.isValidIPAddress("1.1.1.255"));  
        
    }  
	@Test  
    public void testF(){  
		
        
        assertEquals(false ,validateip4address.isValidIPAddress("255.1.1.0"));  
        
    }  
	@Test  
    public void test(){  
		
        
        assertEquals(false,validateip4address.isValidIPAddress("0.1.1.255"));  
        
    }  
}  

